version: "3.8"

services:
  server:
    image: hoyci98/products:latest
    depends_on:
      - db
    ports:
      - "3000:3000"
    networks:
      - productsStackNetwork
    volumes:
      - myappdata:/var/lib/myappnode/data
    environment:
      NODE_ENV: prod
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.role == worker

  db:
    image: bitnami/postgresql:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - ./server/init.sql:/docker-entrypoint-initdb.d/init.sql
      - dbdata:/var/lib/postgresql/data
    networks:
      - productsStackNetwork
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.labels.db == primary

  db_backup:
    image: bitnami/postgresql:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - ./server/init.sql:/docker-entrypoint-initdb.d/init.sql
      - dbdata:/var/lib/postgresql/data
    networks:
      - productsStackNetwork
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.labels.db == backup

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8888:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.labels.visualizer == true

networks:
  productsStackNetwork:
    driver: overlay

volumes:
  myappdata:
  dbdata:
